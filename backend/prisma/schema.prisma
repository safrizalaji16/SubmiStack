// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Action {
  create
  update
  delete
}

enum Role {
  user
  admin
  superAdmin
}

model User {
  id          String          @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name        String          @db.VarChar(100)
  email       String          @unique @db.VarChar(100)
  password    String          @db.VarChar(255)
  role        Role            @default(user)
  submissions Submission[]
  logs        SubmissionLog[] @relation("UserLogs")
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @default(now()) @updatedAt

  @@map("users")
}

model Submission {
  id        String          @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  userId    String?         @db.Uuid
  user      User?           @relation(fields: [userId], references: [id])
  name      String          @db.VarChar(100)
  email     String          @db.VarChar(100)
  phone     String          @db.VarChar(20)
  imageId   String?         @unique @db.Uuid
  image     Image?          @relation(fields: [imageId], references: [id])
  logs      SubmissionLog[]
  createdAt DateTime        @default(now())
  updatedAt DateTime        @default(now()) @updatedAt

  @@map("submissions")
}

model SubmissionLog {
  id           String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  submissionId String     @db.Uuid
  submission   Submission @relation(fields: [submissionId], references: [id])
  action       Action     @default(create)
  performedBy  String     @db.Uuid
  user         User       @relation("UserLogs", fields: [performedBy], references: [id])
  timestamp    DateTime   @default(now())

  @@map("submission_logs")
}

model Image {
  id         String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  path       String      @db.VarChar(255)
  fileName   String      @map("file_name") @db.VarChar(255)
  url        String      @db.VarChar(500)
  createdAt  DateTime    @default(now()) @map("created_at")
  updatedAt  DateTime    @default(now()) @updatedAt @map("updated_at")
  submission Submission?

  @@map("images")
}
